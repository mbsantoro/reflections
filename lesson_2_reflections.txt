What happens when you initialize a repository? Why do you need to do it?

When you initialize a new repository you are opening an unseen directory
where chnages can be cached and logged behind the scenes. This allows
for more flexibility when trying new code.

How is the staging area different from the working directory and the
repository? What value do you think it offers?

The staging area is different from the repository because it allows for
multiple files being commited. This is helpful in writing code because one
small change does not ensure that only one file changed. This way you can
commit mulitple files at once.

How can you use the staging area to make sure you have one commit per 
logical change?

Staging area is a great tool understand a snapshot in time. This could be 
helpful if you get pulled off task. Using git diff and will be helpful 
tool in this regard.

What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?

Branches could be helpful when starting a large complex program that you 
may want to develop different pieces for in parellel. The starting one 
being the master and working on different pieces to not mess up the main 
branch.

How do the diagrams help you visualize the branch structure?

The diagrams help visualize where in the development we are pointing and 
where we may be able to work from. Understanding this structure will be 
helpful in understanding the development of the program.

What is the result of merging two branches together? Why do we represent 
it in the diagram the way we do?

Merging two branches combines them. They become one branch so now the 
commits are interleaved.